"""Initial migration

Revision ID: 3d0d9ce61258
Revises: 
Create Date: 2025-05-28 18:58:19.666599

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3d0d9ce61258'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index('ix_notifications_user_id')

    op.drop_table('notifications')
    with op.batch_alter_table('folio_items', schema=None) as batch_op:
        batch_op.drop_index('ix_folio_items_booking_id')

    op.drop_table('folio_items')
    with op.batch_alter_table('waitlist', schema=None) as batch_op:
        batch_op.drop_index('idx_waitlist_customer')
        batch_op.drop_index('idx_waitlist_dates')
        batch_op.drop_index('idx_waitlist_status')

    op.drop_table('waitlist')
    with op.batch_alter_table('loyalty_ledger', schema=None) as batch_op:
        batch_op.drop_index('ix_loyalty_ledger_customer_id')

    op.drop_table('loyalty_ledger')
    op.drop_table('pricing')
    with op.batch_alter_table('room_types', schema=None) as batch_op:
        batch_op.drop_index('ix_room_types_name')

    op.drop_table('room_types')
    op.drop_table('staff_performance')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_email')
        batch_op.drop_index('ix_users_role')

    op.drop_table('users')
    with op.batch_alter_table('room_status_log', schema=None) as batch_op:
        batch_op.drop_index('ix_room_status_log_room_id')

    op.drop_table('room_status_log')
    op.drop_table('forecast_aggregations')
    with op.batch_alter_table('room_status_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_room_status_logs_room_id')

    op.drop_table('room_status_logs')
    with op.batch_alter_table('loyalty_redemptions', schema=None) as batch_op:
        batch_op.drop_index('ix_loyalty_redemptions_customer_id')

    op.drop_table('loyalty_redemptions')
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.drop_index('ix_rooms_status')

    op.drop_table('rooms')
    with op.batch_alter_table('seasonal_rates', schema=None) as batch_op:
        batch_op.drop_index('idx_seasonal_rates_dates')

    op.drop_table('seasonal_rates')
    with op.batch_alter_table('revenue_forecasts', schema=None) as batch_op:
        batch_op.drop_index('ix_revenue_forecasts_forecast_date')

    op.drop_table('revenue_forecasts')
    with op.batch_alter_table('maintenance_requests', schema=None) as batch_op:
        batch_op.drop_index('idx_maintenance_assigned')
        batch_op.drop_index('idx_maintenance_room')
        batch_op.drop_index('idx_maintenance_status')

    op.drop_table('maintenance_requests')
    op.drop_table('customers')
    with op.batch_alter_table('loyalty_rewards', schema=None) as batch_op:
        batch_op.drop_index('idx_rewards_active_tier')
        batch_op.drop_index('idx_rewards_category')

    op.drop_table('loyalty_rewards')
    with op.batch_alter_table('booking_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_booking_logs_booking_id')

    op.drop_table('booking_logs')
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_index('idx_bookings_dates')
        batch_op.drop_index('ix_bookings_customer_id')

    op.drop_table('bookings')
    with op.batch_alter_table('staff_requests', schema=None) as batch_op:
        batch_op.drop_index('ix_staff_requests_status')

    op.drop_table('staff_requests')
    with op.batch_alter_table('housekeeping_tasks', schema=None) as batch_op:
        batch_op.drop_index('idx_housekeeping_assigned')
        batch_op.drop_index('idx_housekeeping_due_date')
        batch_op.drop_index('idx_housekeeping_room')
        batch_op.drop_index('idx_housekeeping_status')

    op.drop_table('housekeeping_tasks')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index('ix_payments_booking_id')

    op.drop_table('payments')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('booking_id', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('payment_date', sa.DATETIME(), nullable=False),
    sa.Column('payment_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('reference', sa.VARCHAR(length=100), nullable=True),
    sa.Column('processed_by', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('refunded', sa.BOOLEAN(), nullable=True),
    sa.Column('refund_date', sa.DATETIME(), nullable=True),
    sa.Column('refund_reason', sa.TEXT(), nullable=True),
    sa.Column('refund_reference', sa.VARCHAR(length=100), nullable=True),
    sa.Column('refunded_by', sa.INTEGER(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_payments_booking_id_bookings'),
    sa.ForeignKeyConstraint(['processed_by'], ['users.id'], name='fk_payments_processed_by_users'),
    sa.ForeignKeyConstraint(['refunded_by'], ['users.id'], name='fk_payments_refunded_by_users'),
    sa.PrimaryKeyConstraint('id', name='pk_payments')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index('ix_payments_booking_id', ['booking_id'], unique=False)

    op.create_table('housekeeping_tasks',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('assigned_to', sa.INTEGER(), nullable=True),
    sa.Column('task_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('priority', sa.VARCHAR(length=20), nullable=True),
    sa.Column('due_date', sa.DATETIME(), nullable=False),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('verified_by', sa.INTEGER(), nullable=True),
    sa.Column('verified_at', sa.DATETIME(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], name='fk_housekeeping_tasks_assigned_to_users'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='fk_housekeeping_tasks_room_id_rooms'),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], name='fk_housekeeping_tasks_verified_by_users'),
    sa.PrimaryKeyConstraint('id', name='pk_housekeeping_tasks')
    )
    with op.batch_alter_table('housekeeping_tasks', schema=None) as batch_op:
        batch_op.create_index('idx_housekeeping_status', ['status'], unique=False)
        batch_op.create_index('idx_housekeeping_room', ['room_id'], unique=False)
        batch_op.create_index('idx_housekeeping_due_date', ['due_date'], unique=False)
        batch_op.create_index('idx_housekeeping_assigned', ['assigned_to'], unique=False)

    op.create_table('staff_requests',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('role_requested', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('handled_at', sa.DATETIME(), nullable=True),
    sa.Column('handled_by', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['handled_by'], ['users.id'], name='fk_staff_requests_handled_by_users'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_staff_requests_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_staff_requests')
    )
    with op.batch_alter_table('staff_requests', schema=None) as batch_op:
        batch_op.create_index('ix_staff_requests_status', ['status'], unique=False)

    op.create_table('bookings',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('check_in_date', sa.DATE(), nullable=False),
    sa.Column('check_out_date', sa.DATE(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('early_hours', sa.INTEGER(), nullable=False),
    sa.Column('late_hours', sa.INTEGER(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('total_price', sa.FLOAT(), nullable=True),
    sa.Column('num_guests', sa.INTEGER(), server_default=sa.text('1'), nullable=True),
    sa.Column('payment_status', sa.VARCHAR(length=20), server_default=sa.text("'Not Paid'"), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('special_requests_json', sa.TEXT(), nullable=True),
    sa.Column('room_preferences_json', sa.TEXT(), nullable=True),
    sa.Column('confirmation_code', sa.VARCHAR(length=20), nullable=True),
    sa.Column('payment_amount', sa.FLOAT(), server_default=sa.text('(0.0)'), nullable=True),
    sa.Column('deposit_amount', sa.FLOAT(), server_default=sa.text('(0.0)'), nullable=True),
    sa.Column('source', sa.VARCHAR(length=50), nullable=True),
    sa.Column('booking_date', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('loyalty_points_earned', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('guest_name', sa.VARCHAR(length=100), nullable=True),
    sa.Column('cancellation_reason', sa.TEXT(), nullable=True),
    sa.Column('cancelled_by', sa.INTEGER(), nullable=True),
    sa.Column('cancellation_date', sa.DATETIME(), nullable=True),
    sa.Column('cancellation_fee', sa.FLOAT(), server_default=sa.text('(0.0)'), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_bookings_customer_id_customers'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='fk_bookings_room_id_rooms'),
    sa.PrimaryKeyConstraint('id', name='pk_bookings')
    )
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.create_index('ix_bookings_customer_id', ['customer_id'], unique=False)
        batch_op.create_index('idx_bookings_dates', ['room_id', 'check_in_date', 'check_out_date'], unique=False)

    op.create_table('booking_logs',
    sa.Column('booking_id', sa.INTEGER(), nullable=False),
    sa.Column('action', sa.VARCHAR(length=20), nullable=False),
    sa.Column('action_time', sa.DATETIME(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('prev_status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('new_status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('prev_room_id', sa.INTEGER(), nullable=True),
    sa.Column('new_room_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=True),
    sa.Column('reference', sa.VARCHAR(length=100), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_booking_logs_booking_id_bookings'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_booking_logs_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_booking_logs')
    )
    with op.batch_alter_table('booking_logs', schema=None) as batch_op:
        batch_op.create_index('ix_booking_logs_booking_id', ['booking_id'], unique=False)

    op.create_table('loyalty_rewards',
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('points_cost', sa.INTEGER(), nullable=False),
    sa.Column('category', sa.VARCHAR(length=20), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('min_tier', sa.VARCHAR(length=20), nullable=False),
    sa.Column('limited_quantity', sa.BOOLEAN(), nullable=True),
    sa.Column('quantity_remaining', sa.INTEGER(), nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=255), nullable=True),
    sa.Column('expiry_date', sa.DATE(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_loyalty_rewards')
    )
    with op.batch_alter_table('loyalty_rewards', schema=None) as batch_op:
        batch_op.create_index('idx_rewards_category', ['category'], unique=False)
        batch_op.create_index('idx_rewards_active_tier', ['is_active', 'min_tier'], unique=False)

    op.create_table('customers',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=True),
    sa.Column('address', sa.TEXT(), nullable=True),
    sa.Column('emergency_contact', sa.TEXT(), nullable=True),
    sa.Column('profile_complete', sa.BOOLEAN(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), nullable=True),
    sa.Column('preferences_json', sa.TEXT(), nullable=True),
    sa.Column('documents_json', sa.TEXT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('loyalty_points', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('loyalty_tier', sa.VARCHAR(length=20), server_default=sa.text("'Standard'"), nullable=True),
    sa.Column('date_of_birth', sa.DATE(), nullable=True),
    sa.Column('nationality', sa.VARCHAR(length=50), nullable=True),
    sa.Column('vip', sa.BOOLEAN(), server_default=sa.text('0'), nullable=True),
    sa.Column('stay_count', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('total_spent', sa.FLOAT(), server_default=sa.text('(0.0)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_customers_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_customers'),
    sa.UniqueConstraint('user_id', name='uq_customers_user_id')
    )
    op.create_table('maintenance_requests',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('reported_by', sa.INTEGER(), nullable=False),
    sa.Column('assigned_to', sa.INTEGER(), nullable=True),
    sa.Column('issue_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('priority', sa.VARCHAR(length=20), nullable=True),
    sa.Column('resolved_at', sa.DATETIME(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], name='fk_maintenance_requests_assigned_to_users'),
    sa.ForeignKeyConstraint(['reported_by'], ['users.id'], name='fk_maintenance_requests_reported_by_users'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='fk_maintenance_requests_room_id_rooms'),
    sa.PrimaryKeyConstraint('id', name='pk_maintenance_requests')
    )
    with op.batch_alter_table('maintenance_requests', schema=None) as batch_op:
        batch_op.create_index('idx_maintenance_status', ['status'], unique=False)
        batch_op.create_index('idx_maintenance_room', ['room_id'], unique=False)
        batch_op.create_index('idx_maintenance_assigned', ['assigned_to'], unique=False)

    op.create_table('revenue_forecasts',
    sa.Column('forecast_date', sa.DATE(), nullable=False),
    sa.Column('predicted_occupancy_rate', sa.FLOAT(), nullable=False),
    sa.Column('predicted_adr', sa.FLOAT(), nullable=False),
    sa.Column('predicted_revpar', sa.FLOAT(), nullable=False),
    sa.Column('predicted_room_revenue', sa.FLOAT(), nullable=False),
    sa.Column('confidence_score', sa.INTEGER(), nullable=False),
    sa.Column('forecast_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('forecast_notes', sa.TEXT(), nullable=True),
    sa.Column('actual_occupancy_rate', sa.FLOAT(), nullable=True),
    sa.Column('actual_adr', sa.FLOAT(), nullable=True),
    sa.Column('actual_revpar', sa.FLOAT(), nullable=True),
    sa.Column('actual_room_revenue', sa.FLOAT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_revenue_forecasts'),
    sa.UniqueConstraint('forecast_date', name='uix_forecast_date')
    )
    with op.batch_alter_table('revenue_forecasts', schema=None) as batch_op:
        batch_op.create_index('ix_revenue_forecasts_forecast_date', ['forecast_date'], unique=False)

    op.create_table('seasonal_rates',
    sa.Column('room_type_id', sa.INTEGER(), nullable=False),
    sa.Column('start_date', sa.DATE(), nullable=False),
    sa.Column('end_date', sa.DATE(), nullable=False),
    sa.Column('rate_multiplier', sa.NUMERIC(precision=5, scale=2), nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name='fk_seasonal_rates_room_type_id_room_types'),
    sa.PrimaryKeyConstraint('id', name='pk_seasonal_rates')
    )
    with op.batch_alter_table('seasonal_rates', schema=None) as batch_op:
        batch_op.create_index('idx_seasonal_rates_dates', ['room_type_id', 'start_date', 'end_date'], unique=False)

    op.create_table('rooms',
    sa.Column('number', sa.VARCHAR(length=10), nullable=False),
    sa.Column('room_type_id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('last_cleaned', sa.DATETIME(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name='fk_rooms_room_type_id_room_types'),
    sa.PrimaryKeyConstraint('id', name='pk_rooms'),
    sa.UniqueConstraint('number', name='uq_rooms_number')
    )
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.create_index('ix_rooms_status', ['status'], unique=False)

    op.create_table('loyalty_redemptions',
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('reward_id', sa.INTEGER(), nullable=False),
    sa.Column('points_spent', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('redemption_date', sa.DATETIME(), nullable=False),
    sa.Column('fulfillment_date', sa.DATETIME(), nullable=True),
    sa.Column('booking_id', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('staff_id', sa.INTEGER(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_loyalty_redemptions_booking_id_bookings'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_loyalty_redemptions_customer_id_customers'),
    sa.ForeignKeyConstraint(['reward_id'], ['loyalty_rewards.id'], name='fk_loyalty_redemptions_reward_id_loyalty_rewards'),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], name='fk_loyalty_redemptions_staff_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_loyalty_redemptions')
    )
    with op.batch_alter_table('loyalty_redemptions', schema=None) as batch_op:
        batch_op.create_index('ix_loyalty_redemptions_customer_id', ['customer_id'], unique=False)

    op.create_table('room_status_logs',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('old_status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('new_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('changed_by', sa.INTEGER(), nullable=True),
    sa.Column('change_time', sa.DATETIME(), nullable=False),
    sa.Column('booking_id', sa.INTEGER(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_room_status_logs_booking_id_bookings'),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], name='fk_room_status_logs_changed_by_users'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='fk_room_status_logs_room_id_rooms'),
    sa.PrimaryKeyConstraint('id', name='pk_room_status_logs')
    )
    with op.batch_alter_table('room_status_logs', schema=None) as batch_op:
        batch_op.create_index('ix_room_status_logs_room_id', ['room_id'], unique=False)

    op.create_table('forecast_aggregations',
    sa.Column('period_type', sa.VARCHAR(length=10), nullable=False),
    sa.Column('period_start', sa.DATE(), nullable=False),
    sa.Column('period_end', sa.DATE(), nullable=False),
    sa.Column('predicted_occupancy_rate', sa.FLOAT(), nullable=False),
    sa.Column('predicted_adr', sa.FLOAT(), nullable=False),
    sa.Column('predicted_revpar', sa.FLOAT(), nullable=False),
    sa.Column('predicted_room_revenue', sa.FLOAT(), nullable=False),
    sa.Column('actual_occupancy_rate', sa.FLOAT(), nullable=True),
    sa.Column('actual_adr', sa.FLOAT(), nullable=True),
    sa.Column('actual_revpar', sa.FLOAT(), nullable=True),
    sa.Column('actual_room_revenue', sa.FLOAT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_forecast_aggregations'),
    sa.UniqueConstraint('period_type', 'period_start', 'period_end', name='uix_period')
    )
    op.create_table('room_status_log',
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('old_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('new_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('changed_at', sa.DATETIME(), nullable=False),
    sa.Column('changed_by', sa.INTEGER(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], name='fk_room_status_log_changed_by_users'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='fk_room_status_log_room_id_rooms'),
    sa.PrimaryKeyConstraint('id', name='pk_room_status_log')
    )
    with op.batch_alter_table('room_status_log', schema=None) as batch_op:
        batch_op.create_index('ix_room_status_log_room_id', ['room_id'], unique=False)

    op.create_table('users',
    sa.Column('username', sa.VARCHAR(length=64), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=False),
    sa.Column('role_requested', sa.VARCHAR(length=20), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_users'),
    sa.UniqueConstraint('username', name='uq_users_username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('ix_users_role', ['role'], unique=False)
        batch_op.create_index('ix_users_email', ['email'], unique=1)

    op.create_table('staff_performance',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('period_start', sa.DATE(), nullable=False),
    sa.Column('period_end', sa.DATE(), nullable=False),
    sa.Column('tasks_completed', sa.INTEGER(), nullable=True),
    sa.Column('tasks_assigned', sa.INTEGER(), nullable=True),
    sa.Column('avg_response_time_minutes', sa.FLOAT(), nullable=True),
    sa.Column('avg_task_time_minutes', sa.FLOAT(), nullable=True),
    sa.Column('customer_rating', sa.FLOAT(), nullable=True),
    sa.Column('rating_count', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_staff_performance_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_staff_performance')
    )
    op.create_table('room_types',
    sa.Column('name', sa.VARCHAR(length=50), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('amenities', sa.TEXT(), nullable=True),
    sa.Column('base_rate', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('has_view', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True),
    sa.Column('has_balcony', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True),
    sa.Column('smoking_allowed', sa.BOOLEAN(), server_default=sa.text('(FALSE)'), nullable=True),
    sa.Column('amenities_json', sa.TEXT(), server_default=sa.text("'[]'"), nullable=True),
    sa.Column('image_main', sa.VARCHAR(length=255), nullable=True),
    sa.Column('image_gallery', sa.TEXT(), server_default=sa.text("'[]'"), nullable=True),
    sa.Column('size_sqm', sa.FLOAT(), nullable=True),
    sa.Column('bed_type', sa.VARCHAR(length=100), nullable=True),
    sa.Column('max_occupants', sa.INTEGER(), server_default=sa.text('2'), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_room_types')
    )
    with op.batch_alter_table('room_types', schema=None) as batch_op:
        batch_op.create_index('ix_room_types_name', ['name'], unique=False)

    op.create_table('pricing',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('room_type_id', sa.INTEGER(), nullable=False),
    sa.Column('weekend_multiplier', sa.FLOAT(), nullable=True),
    sa.Column('peak_season_multiplier', sa.FLOAT(), nullable=True),
    sa.Column('special_event_multiplier', sa.FLOAT(), nullable=True),
    sa.Column('last_minute_discount', sa.FLOAT(), nullable=True),
    sa.Column('extended_stay_discount', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name='fk_pricing_room_type_id_room_types'),
    sa.PrimaryKeyConstraint('id', name='pk_pricing'),
    sa.UniqueConstraint('room_type_id', name='uq_pricing_room_type_id')
    )
    op.create_table('loyalty_ledger',
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('points', sa.INTEGER(), nullable=False),
    sa.Column('reason', sa.VARCHAR(length=255), nullable=True),
    sa.Column('booking_id', sa.INTEGER(), nullable=True),
    sa.Column('txn_dt', sa.DATETIME(), nullable=False),
    sa.Column('txn_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('staff_id', sa.INTEGER(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_loyalty_ledger_booking_id_bookings'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_loyalty_ledger_customer_id_customers'),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], name='fk_loyalty_ledger_staff_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_loyalty_ledger')
    )
    with op.batch_alter_table('loyalty_ledger', schema=None) as batch_op:
        batch_op.create_index('ix_loyalty_ledger_customer_id', ['customer_id'], unique=False)

    op.create_table('waitlist',
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('room_type_id', sa.INTEGER(), nullable=False),
    sa.Column('requested_date_start', sa.DATE(), nullable=False),
    sa.Column('requested_date_end', sa.DATE(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('notification_sent', sa.BOOLEAN(), nullable=True),
    sa.Column('notification_sent_at', sa.DATETIME(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], name='fk_waitlist_customer_id_users'),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name='fk_waitlist_room_type_id_room_types'),
    sa.PrimaryKeyConstraint('id', name='pk_waitlist')
    )
    with op.batch_alter_table('waitlist', schema=None) as batch_op:
        batch_op.create_index('idx_waitlist_status', ['status'], unique=False)
        batch_op.create_index('idx_waitlist_dates', ['room_type_id', 'requested_date_start', 'requested_date_end'], unique=False)
        batch_op.create_index('idx_waitlist_customer', ['customer_id'], unique=False)

    op.create_table('folio_items',
    sa.Column('booking_id', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('charge_amount', sa.FLOAT(), nullable=False),
    sa.Column('charge_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('staff_id', sa.INTEGER(), nullable=True),
    sa.Column('reference', sa.VARCHAR(length=50), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_folio_items_booking_id_bookings'),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], name='fk_folio_items_staff_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_folio_items')
    )
    with op.batch_alter_table('folio_items', schema=None) as batch_op:
        batch_op.create_index('ix_folio_items_booking_id', ['booking_id'], unique=False)

    op.create_table('notifications',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('message', sa.TEXT(), nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('link_url', sa.VARCHAR(length=255), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_notifications_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_notifications')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('ix_notifications_user_id', ['user_id'], unique=False)

    # ### end Alembic commands ###
