"""Regenerate migration with all models

Revision ID: 408b42b312f5
Revises: 3d0d9ce61258
Create Date: 2025-05-28 18:59:04.124726

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '408b42b312f5'
down_revision = '3d0d9ce61258'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('forecast_aggregations',
    sa.Column('period_type', sa.String(length=10), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('predicted_occupancy_rate', sa.Float(), nullable=False),
    sa.Column('predicted_adr', sa.Float(), nullable=False),
    sa.Column('predicted_revpar', sa.Float(), nullable=False),
    sa.Column('predicted_room_revenue', sa.Float(), nullable=False),
    sa.Column('actual_occupancy_rate', sa.Float(), nullable=True),
    sa.Column('actual_adr', sa.Float(), nullable=True),
    sa.Column('actual_revpar', sa.Float(), nullable=True),
    sa.Column('actual_room_revenue', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forecast_aggregations')),
    sa.UniqueConstraint('period_type', 'period_start', 'period_end', name='uix_period')
    )
    op.create_table('revenue_forecasts',
    sa.Column('forecast_date', sa.Date(), nullable=False),
    sa.Column('predicted_occupancy_rate', sa.Float(), nullable=False),
    sa.Column('predicted_adr', sa.Float(), nullable=False),
    sa.Column('predicted_revpar', sa.Float(), nullable=False),
    sa.Column('predicted_room_revenue', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=False),
    sa.Column('forecast_type', sa.String(length=50), nullable=False),
    sa.Column('forecast_notes', sa.Text(), nullable=True),
    sa.Column('actual_occupancy_rate', sa.Float(), nullable=True),
    sa.Column('actual_adr', sa.Float(), nullable=True),
    sa.Column('actual_revpar', sa.Float(), nullable=True),
    sa.Column('actual_room_revenue', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_revenue_forecasts')),
    sa.UniqueConstraint('forecast_date', name='uix_forecast_date')
    )
    with op.batch_alter_table('revenue_forecasts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_revenue_forecasts_forecast_date'), ['forecast_date'], unique=False)

    op.create_table('room_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_rate', sa.Float(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('has_view', sa.Boolean(), nullable=True),
    sa.Column('has_balcony', sa.Boolean(), nullable=True),
    sa.Column('smoking_allowed', sa.Boolean(), nullable=True),
    sa.Column('amenities_json', sa.Text(), nullable=True),
    sa.Column('image_main', sa.String(length=255), nullable=True),
    sa.Column('image_gallery', sa.Text(), nullable=True),
    sa.Column('size_sqm', sa.Float(), nullable=False),
    sa.Column('bed_type', sa.String(length=100), nullable=False),
    sa.Column('max_occupants', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_room_types')),
    sa.UniqueConstraint('name', name=op.f('uq_room_types_name'))
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('role_requested', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)

    op.create_table('customers',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('emergency_contact', sa.Text(), nullable=True),
    sa.Column('profile_complete', sa.Boolean(), nullable=True),
    sa.Column('preferences_json', sa.Text(), nullable=True),
    sa.Column('documents_json', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('loyalty_points', sa.Integer(), nullable=True),
    sa.Column('loyalty_tier', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('nationality', sa.String(length=50), nullable=True),
    sa.Column('vip', sa.Boolean(), nullable=True),
    sa.Column('stay_count', sa.Integer(), nullable=True),
    sa.Column('total_spent', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_customers_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customers')),
    sa.UniqueConstraint('user_id', name=op.f('uq_customers_user_id'))
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index('idx_customers_loyalty', ['loyalty_tier', 'loyalty_points'], unique=False)

    op.create_table('notifications',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('link_url', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_user_id'), ['user_id'], unique=False)

    op.create_table('rooms',
    sa.Column('number', sa.String(length=10), nullable=False),
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_cleaned', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name=op.f('fk_rooms_room_type_id_room_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rooms')),
    sa.UniqueConstraint('number', name=op.f('uq_rooms_number'))
    )
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rooms_status'), ['status'], unique=False)

    op.create_table('seasonal_rates',
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('rate_multiplier', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('rate_type', sa.String(length=20), nullable=False),
    sa.Column('day_of_week_adjustments', sa.Text(), nullable=True),
    sa.Column('is_special_event', sa.Boolean(), nullable=True),
    sa.Column('min_stay_nights', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], name=op.f('fk_seasonal_rates_room_type_id_room_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_seasonal_rates'))
    )
    with op.batch_alter_table('seasonal_rates', schema=None) as batch_op:
        batch_op.create_index('idx_seasonal_rates_dates', ['room_type_id', 'start_date', 'end_date'], unique=False)

    op.create_table('staff_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_requested', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('handled_at', sa.DateTime(), nullable=True),
    sa.Column('handled_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['handled_by'], ['users.id'], name=op.f('fk_staff_requests_handled_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_staff_requests_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_staff_requests'))
    )
    op.create_table('bookings',
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('check_in_date', sa.Date(), nullable=False),
    sa.Column('check_out_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('early_hours', sa.Integer(), nullable=False),
    sa.Column('late_hours', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('num_guests', sa.Integer(), nullable=False),
    sa.Column('payment_status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('special_requests_json', sa.Text(), nullable=True),
    sa.Column('room_preferences_json', sa.Text(), nullable=True),
    sa.Column('confirmation_code', sa.String(length=20), nullable=True),
    sa.Column('payment_amount', sa.Float(), nullable=True),
    sa.Column('deposit_amount', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('booking_date', sa.DateTime(), nullable=True),
    sa.Column('loyalty_points_earned', sa.Integer(), nullable=True),
    sa.Column('guest_name', sa.String(length=100), nullable=True),
    sa.Column('cancellation_reason', sa.Text(), nullable=True),
    sa.Column('cancelled_by', sa.Integer(), nullable=True),
    sa.Column('cancellation_date', sa.DateTime(), nullable=True),
    sa.Column('cancellation_fee', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cancelled_by'], ['users.id'], name=op.f('fk_bookings_cancelled_by_users')),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name=op.f('fk_bookings_customer_id_customers')),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_bookings_room_id_rooms')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bookings')),
    sa.UniqueConstraint('confirmation_code', name=op.f('uq_bookings_confirmation_code'))
    )
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.create_index('idx_bookings_customer', ['customer_id', 'status'], unique=False)
        batch_op.create_index('idx_bookings_dates', ['room_id', 'check_in_date', 'check_out_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookings_customer_id'), ['customer_id'], unique=False)

    op.create_table('booking_logs',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('action_time', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('prev_status', sa.String(length=20), nullable=True),
    sa.Column('new_status', sa.String(length=20), nullable=True),
    sa.Column('prev_room_id', sa.Integer(), nullable=True),
    sa.Column('new_room_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_booking_logs_booking_id_bookings')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_booking_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_booking_logs'))
    )
    with op.batch_alter_table('booking_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_booking_logs_booking_id'), ['booking_id'], unique=False)

    op.create_table('folio_items',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('charge_amount', sa.Float(), nullable=False),
    sa.Column('charge_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('reference', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_folio_items_booking_id_bookings')),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], name=op.f('fk_folio_items_staff_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_folio_items'))
    )
    with op.batch_alter_table('folio_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_folio_items_booking_id'), ['booking_id'], unique=False)

    op.create_table('loyalty_ledger',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('txn_dt', sa.DateTime(), nullable=False),
    sa.Column('txn_type', sa.String(length=20), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_loyalty_ledger_booking_id_bookings')),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name=op.f('fk_loyalty_ledger_customer_id_customers')),
    sa.ForeignKeyConstraint(['staff_id'], ['users.id'], name=op.f('fk_loyalty_ledger_staff_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_loyalty_ledger'))
    )
    with op.batch_alter_table('loyalty_ledger', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_loyalty_ledger_customer_id'), ['customer_id'], unique=False)

    op.create_table('payments',
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('payment_type', sa.String(length=50), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('processed_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('refunded', sa.Boolean(), nullable=True),
    sa.Column('refund_date', sa.DateTime(), nullable=True),
    sa.Column('refund_reason', sa.Text(), nullable=True),
    sa.Column('refund_reference', sa.String(length=100), nullable=True),
    sa.Column('refunded_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_payments_booking_id_bookings')),
    sa.ForeignKeyConstraint(['processed_by'], ['users.id'], name=op.f('fk_payments_processed_by_users')),
    sa.ForeignKeyConstraint(['refunded_by'], ['users.id'], name=op.f('fk_payments_refunded_by_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_booking_id'), ['booking_id'], unique=False)

    op.create_table('room_status_logs',
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('old_status', sa.String(length=20), nullable=True),
    sa.Column('new_status', sa.String(length=20), nullable=False),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('change_time', sa.DateTime(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('fk_room_status_logs_booking_id_bookings')),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], name=op.f('fk_room_status_logs_changed_by_users')),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_room_status_logs_room_id_rooms')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_room_status_logs'))
    )
    with op.batch_alter_table('room_status_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_room_status_logs_room_id'), ['room_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('room_status_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_room_status_logs_room_id'))

    op.drop_table('room_status_logs')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_booking_id'))

    op.drop_table('payments')
    with op.batch_alter_table('loyalty_ledger', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_loyalty_ledger_customer_id'))

    op.drop_table('loyalty_ledger')
    with op.batch_alter_table('folio_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_folio_items_booking_id'))

    op.drop_table('folio_items')
    with op.batch_alter_table('booking_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_booking_logs_booking_id'))

    op.drop_table('booking_logs')
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bookings_customer_id'))
        batch_op.drop_index('idx_bookings_dates')
        batch_op.drop_index('idx_bookings_customer')

    op.drop_table('bookings')
    op.drop_table('staff_requests')
    with op.batch_alter_table('seasonal_rates', schema=None) as batch_op:
        batch_op.drop_index('idx_seasonal_rates_dates')

    op.drop_table('seasonal_rates')
    with op.batch_alter_table('rooms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rooms_status'))

    op.drop_table('rooms')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_user_id'))

    op.drop_table('notifications')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index('idx_customers_loyalty')

    op.drop_table('customers')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('room_types')
    with op.batch_alter_table('revenue_forecasts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_revenue_forecasts_forecast_date'))

    op.drop_table('revenue_forecasts')
    op.drop_table('forecast_aggregations')
    # ### end Alembic commands ###
